function push_segment(seg,off)
	return @'

@$seg
D=M
@$off
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1'
	
end

function push_temp(seg_num,off)
	return @'
						
@$seg_num
D=A
@$off
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1'

end

function push_stat(currentFileName, point, off)
	return @'
	
@$currentFileName$point$off
D=M
@SP
A=M
M=D
@SP
M=M+1'
	
end

function push_constant(off)
	return @'

@$off
D=A
@SP
A=M
M=D
@SP
M=M+1'

end

function pop_segment(seg,off)
	return @'
						
@$seg
D=M
@$off
D=D+A
@13
M=D
@SP
M=M-1
@SP
A=M
D=M
@13
A=M
M=D'

end

function pop_temp(seg_num,off)
	return @'
						
@$seg_num
D=A
@$off
D=D+A
@13
M=D
@SP
M=M-1
@SP
A=M
D=M
@13
A=M
M=D'

end

function pop_stat(currentFileName, point, off)
	return @'

@$currentFileName$point$off
D=A
@13
M=D
@SP
M=M-1
@SP
A=M
D=M
@13
A=M
M=D'

end

function pop_constant(off)
	return @'

@SP
M=M-1'

end

function add()
	return '
	
@SP
A=M
A=A-1
D=M
A=A-1
M=M+D
@SP
M=M-1'

end

function sub()
	return '
				
@SP
A=M
A=A-1
D=M
A=A-1
M=M-D
@SP
M=M-1'
end

function neg()
	return '

@SP
A=M
A=A-1
D=M
M=-D'

end

function eq(count_true, count_false)
	return @'

@SP
A=M
A=A-1
D=M
A=A-1
D=M-D
@IF_TRUE$count_true
D;JEQ
D=0
@SP
A=M-1
A=A-1
M=D
@IF_FALSE$count_false
0;JMP
(IF_TRUE$count_true)
D=-1
@SP
A=M-1
A=A-1
M=D
(IF_FALSE$count_false)    
@SP
M=M-1'

end

function gt(count_true, count_false)
	return @'

@SP
A=M
A=A-1
D=M
A=A-1
D=M-D
@IF_TRUE$count_true
D;JGT
D=0
@SP
A=M-1
A=A-1
M=D
@IF_FALSE$count_false
0;JMP
(IF_TRUE$count_true)
D=-1
@SP
A=M-1
A=A-1
M=D
(IF_FALSE$count_false)
@SP
M=M-1'

end

function lt(count_true, count_false)
	return @'

@SP
A=M
A=A-1
D=M
A=A-1
D=M-D
@IF_TRUE$count_true
D;JLT
D=0
@SP
A=M-1
A=A-1
M=D
@IF_FALSE$count_false
0;JMP
(IF_TRUE$count_true)
D=-1
@SP
A=M-1
A=A-1
M=D
(IF_FALSE$count_false)
@SP
M=M-1'

end

function and2()
	return '
				
@SP
A=M
A=A-1
D=M
A=A-1
M=M&D
@SP
M=M-1'

end

function or2()
	return '
				
@SP
A=M
A=A-1
D=M
A=A-1
M=M|D
@SP
M=M-1'

end

function not2()
	return '
				
@SP
A=M
A=A-1
D=M
M=!D'

end